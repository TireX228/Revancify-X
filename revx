#!/usr/bin/bash

HOME=/data/data/com.termux/files/home
BIN=/data/data/com.termux/files/usr/bin

path="$HOME/RevancifyX"
cp "$path/revx" "$BIN/revx" &> /dev/null

help() {
    if [ "$1" == "1" ]; then
        readarray -t invalidArgs < <(for i in "${FLAG_ERR[@]}"; do
            if grep -q "unrecognized" <<< "$i"; then
                grep -oP "(?<=\`).*(?=')" <<< "$i"
            else
                cut -b 27 <<< "$i" | xargs -0 -I {} echo -n "-{}"
            fi
        done)
        IFS=","
        echo -e "\e[1;31mInvalid Argument(s) Passed: ${invalidArgs[*]}\n\e[0m"
    fi
    echo -e "\e[1;34mrevancify X\n\e[0m
\e[1;33mUsage:\e[0m \e[1;32mrevancify X[OPTION]\n\e[0m
\e[1;33mOptions:\e[0m
\e[1;33m-n, --no-root     \e[1;34mRun without SU permissions\e[0m
\e[1;33m-o, --offline     \e[1;34mRun without updating revancify\e[0m
\e[1;33m-r, --reinstall   \e[1;34mReinstall revancify\e[0m
\e[1;33m-h, --help        \e[1;34mPrints help statement\e[0m

\e[1;35mGithub repo: https://github.com/kastentop2005/Revancify-X"
    exit "$1"
}

if ! ARGS=$(getopt -o nohr -l "no-root,offline,help,reinstall" -- "$@" 2>/dev/null); then
    readarray -t FLAG_ERR < <(getopt -o nohr -l no-root,offline,help,reinstall -- "$@" 2>&1 1>&-)
    help 1
fi
eval set -- "$ARGS"
while [ $# -gt 0 ]
do
    case "$1" in
    "-h" | "--help")
                        help 0
                        ;;
    "-n" | "--no-root")
                        flag="nonRoot"
                        shift
                        ;;
    "-r" | "--reinstall")
                        if ping -c 1 google.com &> /dev/null; then
                            cd "$path"/.. && rm -rf "$path" && git clone --depth=1 https://github.com/kastentop2005/Revancify-X && revx && exit
                        else
                            echo "No internet Connection !!"
                            exit 1
                        fi
                        ;;
    "-o" | "--offline")
                        status="Offline [forced]"
                        shift
                        ;;
    "--")
        shift
        break
        ;;
    esac
    shift
done

if [ "$(getprop ro.product.cpu.abi)" = "armeabi-v7a" ]; then
    echo "CPU architecture \"armeabi-v7a\" of your device is not supported for patching."
    echo "You may get build errors."
    read -N 1 -s -r -p $'Press ENTER to CONTINUE or SPACE to EXIT...\n' key
    if [ "$key" = " " ]; then
        echo "Revancify X has been terminated"
        exit
    fi
fi

terminate() {
    clear
    echo "Revancify X has been terminated"
    tput cnorm
    exit 1
}
trap terminate SIGTERM SIGINT SIGABRT

DATA="$HOME/RevancifyX-data"
[ ! -d $DATA ] && mkdir -p "$DATA"
# shellcheck source=/dev/null
source "$DATA/.envVars" > /dev/null 2>&1
[ "${lightTheme:-false}" == "true" ] && theme=Light || theme=Dark
export DIALOGRC="$path/configs/.dialogrc$theme"

checkdependencies() {
    if command -v aapt2 pup java wget tput dialog jq revancify &> /dev/null; then
        return 0
    else
        if ping -c 1 google.com &> /dev/null; then
            installdependencies || (echo "Dependencies are not installed" && exit 1)
        else
            cp "$path/revx" "$BIN/revx"
            echo -e "Dependencies are not installed\nRun the program again with internet connection"
            exit 1
        fi
    fi
}

installdependencies() {
    clear
    echo "Installing dependencies..."
    cp "$path/revancify" "$BIN/revancify"
    sleep 1
    [ ! -d "$HOME/storage" ] && termux-setup-storage
    pkg update -y -o Dpkg::Options::="--force-confnew" || return 1
    pkg install openjdk-17 wget ncurses-utils dialog jq -y -o Dpkg::Options::="--force-confnew" || return 1
    git config --global pull.rebase true
    sed -i '/allow-external-apps/s/# //' "$HOME/.termux/termux.properties"

    if ! command -v aapt2 &> /dev/null
    then
        echo "aapt2 was not found, installing..."
        pkg install -y aapt2
    else
        echo "aapt2 is already installed. Skipping..."
    fi

    if ! command -v pup &> /dev/null
    then
        echo "pup was not found, installing..."
        pkg install -y pup
    else
        echo "pup is already installed. Skipping..."
    fi

    echo "Dependencies have been installed successfully"
    return 0
}

checkrevancify() {
    if [ -d "$path" ]; then
        cd "$path" >/dev/null 2>&1 || true
        rm -rf ./*cache*
        return 0
    else
        echo -e "\e[1;31mRevancify X dir hasn't been found\e[0m"
        echo -e "\e[1;31mDo you want to reinstall Revancify X?\e[0m"
        read -r -p "[Y/N]: " choice
        case "$choice" in
        y | Y)
            rm -rf "$path"
            git clone --depth=1 https://github.com/kastentop2005/Revancify-X && revx && exit
            ;;
        n | N)
            echo "Removing Revancify X..."
            sleep 0.5s
            rm "$BIN/revx"
            echo "Successfully uninstalled"
            exit 0
            ;;
        ?)
            echo "Invalid choice!"
            exit 1
            ;;
        esac
    fi
}

checkdependencies
checkrevancify
tput civis
dialog --keep-window --no-shadow --keep-window --infobox "\n  █▀█ █▀▀ █░█ ▄▀█ █▄░█ █▀▀ █ █▀▀ █▄█\n  █▀▄ ██▄ ▀▄▀ █▀█ █░▀█ █▄▄ █ █▀░ ░█░  \n\nDeveloper    : konnlori\nLast Updated : Checking...\nStatus       : Checking..." 10 42

if ping -c 1 google.com >/dev/null 2>&1; then
    status=${status:-Online}
else
    status=Offline
fi
if [ "$status" == "Online" ]; then
    git pull >/dev/null 2>&1 || (git fetch --all >/dev/null 2>&1 && git reset --hard "@{u}" >/dev/null 2>&1)
    dialog --no-shadow --infobox "\n  █▀█ █▀▀ █░█ ▄▀█ █▄░█ █▀▀ █ █▀▀ █▄█\n  █▀▄ ██▄ ▀▄▀ █▀█ █░▀█ █▄▄ █ █▀░ ░█░  \n\nDeveloper    : konnlori\nLast Updated : $(git log -1 --pretty='format:%cd' --date=format:'%b %d, %Y | %H:%M')\nStatus       : $status" 10 42
else
    dialog --no-shadow --infobox "\n  █▀█ █▀▀ █░█ ▄▀█ █▄░█ █▀▀ █ █▀▀ █▄█\n  █▀▄ ██▄ ▀▄▀ █▀█ █░▀█ █▄▄ █ █▀░ ░█░  \n\nDeveloper    : konnlori\nLast Updated : $(git log -1 --pretty='format:%cd' --date=format:'%b %d, %Y | %H:%M')\nStatus       : $status" 10 42
fi
cd "$DATA" >/dev/null 2>&1 || true
bash "$path/main.sh" "$flag"
exitstatus=$?
clear
cd "$HOME" || :
if [ $exitstatus -eq 0 ]; then
    echo "Exited Revancify X"
else
    echo "Revancify X has been terminated"
    rm -rf -- *cache >/dev/null 2>&1
fi
tput cnorm
